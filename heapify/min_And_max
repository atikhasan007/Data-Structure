#include <bits/stdc++.h>
using namespace std;

void hepify(int arr[], int n, int i) {
    int largest = i;
    int left = 2 * i;
    int right = 2 * i + 1;

    if (left <= n && arr[largest] < arr[left]) {
        largest = left;
    }

    if (right <= n && arr[largest] < arr[right]) {
        largest = right;
    }

    if (largest != i) {
        swap(arr[largest], arr[i]);
        hepify(arr, n, largest);
    }
}



void minhep(int arr[], int n ,int i){
    int smallest = i;
    int left = 2*i;
    int right = 2*i+1;

    if(left < n and arr[left] > arr[smallest]){
        smallest = left;
    }
    if(right < n and arr[right] > arr[smallest]){
        smallest = right;
    }



    if(smallest!=i){
        swap(arr[smallest], arr[i]);
        minhep(arr, n , i);
    }
}
int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int arr[6] = {-1, 54, 53, 55, 52, 50}; // 1-based indexing
    int n = 5;

    // Build heap
    for (int i = n / 2; i > 0; i--) {
        hepify(arr, n, i);
    }

    // Print the heap
    for (int i = 1; i <= n; i++) { // Use i <= n to include all elements
        cout << arr[i] << ' ';
    }
    cout << endl;

    return 0;
}


// 
